/* .flexContainer:last-child {
  margin-top: 2em;
} */

.flexContainer {
  margin-top: 2em;
}

body {
  margin: 0;
  padding: 0;
}

div {
  height: 50px;
  width: 50px;
}
div:nth-child(1) {
  background-color: red;
  width: 50px;
  height: 50px;
}
div:nth-child(2) {
  background-color: blue;
}
div:nth-child(3) {
  background-color: green;
}
div:nth-child(4) {
  background-color: yellow;
}
div:nth-child(5) {
  background-color: pink;
}
div:nth-child(6) {
  background-color: black;
}
div:nth-child(7) {
  background-color: orange;
}
div:nth-child(8) {
  background-color: silver;
}
/*fim do setup */

.flexContainer {
  display: flex;
  /* justify-content: space-around;
  align-items: center;
  flex-direction: column; */
}

.flexItem {
  /* flex-grow: 1; */

  /* Navegador pega todo o espaço que está sobrando e divide pela quantidade de flex-grow que a gente tem Temos 4 Flex Item. */

  /*O navegador vai pegar o espação que tinha e dividir pelos flex-grow desses items que a gente tem, ou seja, 4.*/

  /* Pega o espação e divide em 4 pedaços, pega esses pedaços e distribui para cada um dos flex Item*/
  /* Todos ficam do mesmo tamanho, pois todos recebem uma fatia igual dessa divisão */
}

.primeiro {
  /* flex-grow: 2; */
  /* Temos 4 divs */
  /* Todas as divs tem flex-grow: 1, menos a primeira que tem 2 */
  /* A primeira div aumenta mais */

  /* Quais contas o navegador fez por tras disso?  */
  /* Navegador pegou espaço vazio e fez as contas do flex-grow */
  /* O primeiro elemento tem flex-grow: 2 */
  /* O segundo elemento tem flex-grow: 1 */
  /* O terceiro elemento tem flex-grow: 1 */
  /* O quarto elemento tem flex-grow: 1 */

  /* Ele pegou os 5 flex-grow que tem e dividiu o espação vazio por esse número, por 5 */
  /* Dividiu por 5, mas a primeira div vai tomar 2 desses pedaços */
  /* 2 pedaços que ele dividiu vai para a primeira div */
  /* 1 pedaço vai para a segunda div */
  /* 1 pedaço para a terceira div */
  /* 1 pedaço para a quarta div */

  /* A primeira div ficou grandona porque recebeu 2 fatias dessa divisão */
  /* A segunda, terceira e quarta div ficaram menor, pois receberam uma fatia só */
}

.flexItem {
  flex-grow: 2;
}

.primeiro {
  flex-grow: 3;
}

/* CONTA DO NAVEGADOR */

/* O navegador pegou o espaço vazio  */
/* Dividiu o espaço vazio pela quantidade de flex-grow  */

/* O primeiro elemento tem 3  */
/* O segundo elemento tem 2 */
/* O terceiro elemento tem 2 */
/* O quarto elemento tem 2 */

/* Temos 9 da soma de flex-grow */

/* O primeiro elemento pegou 3 pedaços e ficou maior que todo mundo  */
/* O segundo, terceiro e quarto elemento pegaram 2 pedaços cada */
/* O primeiro fica maior que todos porque pegou 3 pedaços do espação vazio */


/* OBS: 
Por padrão o flex-grow é 0. Significa que os elementos não vão crescer automaticamente, vão se manter no tamanho original. Se eu colocar um flex-grow diferente de 0.. 1, 2 ou algo do tipo, ele vai pegar o espaço vazio e distribuir entre os elementos fazendo a continha 

flex-grow: 0; fica normal, não se mexe, não faz nada */