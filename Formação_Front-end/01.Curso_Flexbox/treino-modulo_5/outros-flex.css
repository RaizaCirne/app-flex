/* .flexContainer:last-child {
  margin-top: 2em;
} */

.flexContainer {
  margin-top: 2em;
}

body {
  margin: 0;
  padding: 0;
}

div {
  height: 50px;
  width: 50px;
}
div:nth-child(1) {
  background-color: red;
  width: 50px;
  height: 50px;
}
div:nth-child(2) {
  background-color: blue;
}
div:nth-child(3) {
  background-color: green;
}
div:nth-child(4) {
  background-color: yellow;
}
div:nth-child(5) {
  background-color: pink;
}
div:nth-child(6) {
  background-color: black;
}
div:nth-child(7) {
  background-color: orange;
}
div:nth-child(8) {
  background-color: silver;
}
/*fim do setup */

.flexContainer {
  display: flex;
  /* justify-content: space-around;
  align-items: center;
  flex-direction: column; */
}

.flexItem {
  /* Atalho para definir flex-shrink e flex-grow respectivamente */
  /* flex: 1 1; */
  /* 1 para o flex-grow e 1 para o flex-shrink.  */
  /* 1 e 1 ele vai distribuir igualmente entre os elementos tanto no flex-grow quanto no flex-shrink */

  /* Atalho para definir flex-shrink, flex-grow e flex-basis respectivamente */
  flex: 0 1 200px;

  /* flex-basis: 25%; */
  /* Ele recebe um número absoluto, algum valor de largura  */
  /* O flex-basis define uma largura para os elementos */
  /* flex-basis: 200px -> Os elementos ficaram com 200px que é a proposta do flex-basis */
  /* Se colocamos flex-basis: 25%; ele vai colocar 1/4 para cada um deles.  */
  /* O flex-basis é basicamente um width, uma largura dos elementos */
}
